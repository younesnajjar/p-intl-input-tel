{"version":3,"file":"p-intl-input-tel.mjs","sources":["../../../projects/p-intl-input-tel/src/model/search-country-field.ts","../../../projects/p-intl-input-tel/src/model/country.model.ts","../../../projects/p-intl-input-tel/src/model/change-data.ts","../../../projects/p-intl-input-tel/src/model/country-iso.enum.ts","../../../projects/p-intl-input-tel/src/data/country-code.ts","../../../projects/p-intl-input-tel/src/utils/local-phone-utils.ts","../../../projects/p-intl-input-tel/src/validator/p-intl-input-tel.validator.ts","../../../projects/p-intl-input-tel/src/pipe/dialCode.pipe.ts","../../../projects/p-intl-input-tel/src/directives/favorite-element-injector.directive.ts","../../../projects/p-intl-input-tel/src/directives/native-element-injector.directive.ts","../../../projects/p-intl-input-tel/src/pipe/filter.pipe.ts","../../../projects/p-intl-input-tel/src/component/p-intl-input-tel.component.ts","../../../projects/p-intl-input-tel/src/component/p-intl-input-tel.component.html","../../../projects/p-intl-input-tel/p-intl-input-tel.ts"],"sourcesContent":["export enum SearchCountryField {\n    DIALCODE = 'dialCode',\n    ISO2 = 'iso2',\n    NAME = 'name',\n};\n","export class Country {\n    name: string;\n    iso2: string;\n    dialCode: string;\n    priority: number;\n    areaCodes?: string[];\n    htmlId: string;\n    flagClass: string;\n    placeHolder: string;\n    isFavorite: boolean;\n\n    constructor() {\n        this.name = '';\n        this.iso2 = '';\n        this.dialCode = '';\n        this.priority = 0;\n        this.areaCodes = undefined;\n        this.htmlId = '';\n        this.flagClass = '';\n        this.placeHolder = '';\n    }\n}\n","import { PhoneNumber, PhoneNumberFormat, PhoneNumberUtil } from 'google-libphonenumber';\n\nexport class ChangeData {\n    number: string;\n    internationalNumber: string;\n    nationalNumber: string;\n    e164Number: string;\n    countryCode: string | undefined;\n    dialCode: string;\n\n    constructor(phoneNumber?: PhoneNumber) {\n        const utils = PhoneNumberUtil.getInstance();\n        this.countryCode = phoneNumber && utils.getRegionCodeForNumber(phoneNumber) ? utils.getRegionCodeForNumber(phoneNumber) : '';\n        this.dialCode = phoneNumber?.getCountryCode() ? `+${phoneNumber.getCountryCode()}` : '';\n        this.e164Number = phoneNumber && utils.format(phoneNumber, PhoneNumberFormat.E164) !== '+0' ? utils.format(phoneNumber, PhoneNumberFormat.E164) : '';\n        this.internationalNumber = phoneNumber ? utils.format(phoneNumber, PhoneNumberFormat.INTERNATIONAL) : '';\n        this.nationalNumber = phoneNumber ? utils.format(phoneNumber, PhoneNumberFormat.NATIONAL) : '';\n        this.number = phoneNumber ? utils.format(phoneNumber, PhoneNumberFormat.NATIONAL) : '';\n    }\n}\n","export enum CountryISO {\n\tAfghanistan = 'af',\n\tAlbania = 'al',\n\tAlgeria = 'dz',\n\tAmericanSamoa = 'as',\n\tAndorra = 'ad',\n\tAngola = 'ao',\n\tAnguilla = 'ai',\n\tAntiguaAndBarbuda = 'ag',\n\tArgentina = 'ar',\n\tArmenia = 'am',\n\tAruba = 'aw',\n\tAustralia = 'au',\n\tAustria = 'at',\n\tAzerbaijan = 'az',\n\tBahamas = 'bs',\n\tBahrain = 'bh',\n\tBangladesh = 'bd',\n\tBarbados = 'bb',\n\tBelarus = 'by',\n\tBelgium = 'be',\n\tBelize = 'bz',\n\tBenin = 'bj',\n\tBermuda = 'bm',\n\tBhutan = 'bt',\n\tBolivia = 'bo',\n\tBosniaAndHerzegovina = 'ba',\n\tBotswana = 'bw',\n\tBrazil = 'br',\n\tBritishIndianOceanTerritory = 'io',\n\tBritishVirginIslands = 'vg',\n\tBrunei = 'bn',\n\tBulgaria = 'bg',\n\tBurkinaFaso = 'bf',\n\tBurundi = 'bi',\n\tCambodia = 'kh',\n\tCameroon = 'cm',\n\tCanada = 'ca',\n\tCapeVerde = 'cv',\n\tCaribbeanNetherlands = 'bq',\n\tCaymanIslands = 'ky',\n\tCentralAfricanRepublic = 'cf',\n\tChad = 'td',\n\tChile = 'cl',\n\tChina = 'cn',\n\tChristmasIsland = 'cx',\n\tCocos = 'cc',\n\tColombia = 'co',\n\tComoros = 'km',\n\tCongoDRCJamhuriYaKidemokrasiaYaKongo = 'cd',\n\tCongoRepublicCongoBrazzaville = 'cg',\n\tCookIslands = 'ck',\n\tCostaRica = 'cr',\n\tCôteDIvoire = 'ci',\n\tCroatia = 'hr',\n\tCuba = 'cu',\n\tCuraçao = 'cw',\n\tCyprus = 'cy',\n\tCzechRepublic = 'cz',\n\tDenmark = 'dk',\n\tDjibouti = 'dj',\n\tDominica = 'dm',\n\tDominicanRepublic = 'do',\n\tEcuador = 'ec',\n\tEgypt = 'eg',\n\tElSalvador = 'sv',\n\tEquatorialGuinea = 'gq',\n\tEritrea = 'er',\n\tEstonia = 'ee',\n\tEthiopia = 'et',\n\tFalklandIslands = 'fk',\n\tFaroeIslands = 'fo',\n\tFiji = 'fj',\n\tFinland = 'fi',\n\tFrance = 'fr',\n\tFrenchGuiana = 'gf',\n\tFrenchPolynesia = 'pf',\n\tGabon = 'ga',\n\tGambia = 'gm',\n\tGeorgia = 'ge',\n\tGermany = 'de',\n\tGhana = 'gh',\n\tGibraltar = 'gi',\n\tGreece = 'gr',\n\tGreenland = 'gl',\n\tGrenada = 'gd',\n\tGuadeloupe = 'gp',\n\tGuam = 'gu',\n\tGuatemala = 'gt',\n\tGuernsey = 'gg',\n\tGuinea = 'gn',\n\tGuineaBissau = 'gw',\n\tGuyana = 'gy',\n\tHaiti = 'ht',\n\tHonduras = 'hn',\n\tHongKong = 'hk',\n\tHungary = 'hu',\n\tIceland = 'is',\n\tIndia = 'in',\n\tIndonesia = 'id',\n\tIran = 'ir',\n\tIraq = 'iq',\n\tIreland = 'ie',\n\tIsleOfMan = 'im',\n\tIsrael = 'il',\n\tItaly = 'it',\n\tJamaica = 'jm',\n\tJapan = 'jp',\n\tJersey = 'je',\n\tJordan = 'jo',\n\tKazakhstan = 'kz',\n\tKenya = 'ke',\n\tKiribati = 'ki',\n\tKosovo = 'xk',\n\tKuwait = 'kw',\n\tKyrgyzstan = 'kg',\n\tLaos = 'la',\n\tLatvia = 'lv',\n\tLebanon = 'lb',\n\tLesotho = 'ls',\n\tLiberia = 'lr',\n\tLibya = 'ly',\n\tLiechtenstein = 'li',\n\tLithuania = 'lt',\n\tLuxembourg = 'lu',\n\tMacau = 'mo',\n\tMacedonia = 'mk',\n\tMadagascar = 'mg',\n\tMalawi = 'mw',\n\tMalaysia = 'my',\n\tMaldives = 'mv',\n\tMali = 'ml',\n\tMalta = 'mt',\n\tMarshallIslands = 'mh',\n\tMartinique = 'mq',\n\tMauritania = 'mr',\n\tMauritius = 'mu',\n\tMayotte = 'yt',\n\tMexico = 'mx',\n\tMicronesia = 'fm',\n\tMoldova = 'md',\n\tMonaco = 'mc',\n\tMongolia = 'mn',\n\tMontenegro = 'me',\n\tMontserrat = 'ms',\n\tMorocco = 'ma',\n\tMozambique = 'mz',\n\tMyanmar = 'mm',\n\tNamibia = 'na',\n\tNauru = 'nr',\n\tNepal = 'np',\n\tNetherlands = 'nl',\n\tNewCaledonia = 'nc',\n\tNewZealand = 'nz',\n\tNicaragua = 'ni',\n\tNiger = 'ne',\n\tNigeria = 'ng',\n\tNiue = 'nu',\n\tNorfolkIsland = 'nf',\n\tNorthKorea = 'kp',\n\tNorthernMarianaIslands = 'mp',\n\tNorway = 'no',\n\tOman = 'om',\n\tPakistan = 'pk',\n\tPalau = 'pw',\n\tPalestine = 'ps',\n\tPanama = 'pa',\n\tPapuaNewGuinea = 'pg',\n\tParaguay = 'py',\n\tPeru = 'pe',\n\tPhilippines = 'ph',\n\tPoland = 'pl',\n\tPortugal = 'pt',\n\tPuertoRico = 'pr',\n\tQatar = 'qa',\n\tRéunion = 're',\n\tRomania = 'ro',\n\tRussia = 'ru',\n\tRwanda = 'rw',\n\tSaintBarthélemy = 'bl',\n\tSaintHelena = 'sh',\n\tSaintKittsAndNevis = 'kn',\n\tSaintLucia = 'lc',\n\tSaintMartin = 'mf',\n\tSaintPierreAndMiquelon = 'pm',\n\tSaintVincentAndTheGrenadines = 'vc',\n\tSamoa = 'ws',\n\tSanMarino = 'sm',\n\tSãoToméAndPríncipe = 'st',\n\tSaudiArabia = 'sa',\n\tSenegal = 'sn',\n\tSerbia = 'rs',\n\tSeychelles = 'sc',\n\tSierraLeone = 'sl',\n\tSingapore = 'sg',\n\tSintMaarten = 'sx',\n\tSlovakia = 'sk',\n\tSlovenia = 'si',\n\tSolomonIslands = 'sb',\n\tSomalia = 'so',\n\tSouthAfrica = 'za',\n\tSouthKorea = 'kr',\n\tSouthSudan = 'ss',\n\tSpain = 'es',\n\tSriLanka = 'lk',\n\tSudan = 'sd',\n\tSuriname = 'sr',\n\tSvalbardAndJanMayen = 'sj',\n\tSwaziland = 'sz',\n\tSweden = 'se',\n\tSwitzerland = 'ch',\n\tSyria = 'sy',\n\tTaiwan = 'tw',\n\tTajikistan = 'tj',\n\tTanzania = 'tz',\n\tThailand = 'th',\n\tTimorLeste = 'tl',\n\tTogo = 'tg',\n\tTokelau = 'tk',\n\tTonga = 'to',\n\tTrinidadAndTobago = 'tt',\n\tTunisia = 'tn',\n\tTurkey = 'tr',\n\tTurkmenistan = 'tm',\n\tTurksAndCaicosIslands = 'tc',\n\tTuvalu = 'tv',\n\tUSVirginIslands = 'vi',\n\tUganda = 'ug',\n\tUkraine = 'ua',\n\tUnitedArabEmirates = 'ae',\n\tUnitedKingdom = 'gb',\n\tUnitedStates = 'us',\n\tUruguay = 'uy',\n\tUzbekistan = 'uz',\n\tVanuatu = 'vu',\n\tVaticanCity = 'va',\n\tVenezuela = 've',\n\tVietnam = 'vn',\n\tWallisAndFutuna = 'wf',\n\tWesternSahara = 'eh',\n\tYemen = 'ye',\n\tZambia = 'zm',\n\tZimbabwe = 'zw',\n\tÅlandIslands = 'ax',\n}\n","import { CountryISO } from '../model/country-iso.enum';\n\nexport const ALL_COUNTRIES = [\n    [\n        'Afghanistan (‫افغانستان‬‎)',\n        CountryISO.Afghanistan,\n        '93'\n    ],\n    [\n        'Albania (Shqipëri)',\n        CountryISO.Albania,\n        '355'\n    ],\n    [\n        'Algeria (‫الجزائر‬‎)',\n        CountryISO.Algeria,\n        '213'\n    ],\n    [\n        'American Samoa',\n        'as',\n        '1',\n        1,\n        [\n            '684',\n        ]\n    ],\n    [\n        'Andorra',\n        CountryISO.Andorra,\n        '376'\n    ],\n    [\n        'Angola',\n        CountryISO.Angola,\n        '244'\n    ],\n    [\n        'Anguilla',\n        'ai',\n        '1',\n        1,\n        [\n            '264',\n        ]\n    ],\n    [\n        'Antigua and Barbuda',\n        'ag',\n        '1',\n        1,\n        [\n            '268',\n        ]\n    ],\n    [\n        'Argentina',\n        CountryISO.Argentina,\n        '54'\n    ],\n    [\n        'Armenia (Հայաստան)',\n        CountryISO.Armenia,\n        '374'\n    ],\n    [\n        'Aruba',\n        CountryISO.Aruba,\n        '297'\n    ],\n    [\n        'Australia',\n        CountryISO.Australia,\n        '61',\n        0\n    ],\n    [\n        'Austria (Österreich)',\n        CountryISO.Austria,\n        '43'\n    ],\n    [\n        'Azerbaijan (Azərbaycan)',\n        CountryISO.Azerbaijan,\n        '994'\n    ],\n    [\n        'Bahamas',\n        'bs',\n        '1',\n        1,\n        [\n            '242',\n        ]\n    ],\n    [\n        'Bahrain (‫البحرين‬‎)',\n        CountryISO.Bahrain,\n        '973'\n    ],\n    [\n        'Bangladesh (বাংলাদেশ)',\n        CountryISO.Bangladesh,\n        '880'\n    ],\n    [\n        'Barbados',\n        'bb',\n        '1',\n        1,\n        [\n            '246',\n        ]\n    ],\n    [\n        'Belarus (Беларусь)',\n        CountryISO.Belarus,\n        '375'\n    ],\n    [\n        'Belgium (België)',\n        CountryISO.Belgium,\n        '32'\n    ],\n    [\n        'Belize',\n        CountryISO.Belize,\n        '501'\n    ],\n    [\n        'Benin (Bénin)',\n        CountryISO.Benin,\n        '229'\n    ],\n    [\n        'Bermuda',\n        'bm',\n        '1',\n        1,\n        [\n            '441',\n        ]\n    ],\n    [\n        'Bhutan (འབྲུག)',\n        CountryISO.Bhutan,\n        '975'\n    ],\n    [\n        'Bolivia',\n        CountryISO.Bolivia,\n        '591'\n    ],\n    [\n        'Bosnia and Herzegovina (Босна и Херцеговина)',\n        CountryISO.BosniaAndHerzegovina,\n        '387'\n    ],\n    [\n        'Botswana',\n        CountryISO.Botswana,\n        '267'\n    ],\n    [\n        'Brazil (Brasil)',\n        CountryISO.Brazil,\n        '55'\n    ],\n    [\n        'British Indian Ocean Territory',\n        CountryISO.BritishIndianOceanTerritory,\n        '246'\n    ],\n    [\n        'British Virgin Islands',\n        'vg',\n        '1',\n        1,\n        [\n            '284',\n        ]\n    ],\n    [\n        'Brunei',\n        CountryISO.Brunei,\n        '673'\n    ],\n    [\n        'Bulgaria (България)',\n        CountryISO.Bulgaria,\n        '359'\n    ],\n    [\n        'Burkina Faso',\n        CountryISO.BurkinaFaso,\n        '226'\n    ],\n    [\n        'Burundi (Uburundi)',\n        CountryISO.Burundi,\n        '257'\n    ],\n    [\n        'Cambodia (កម្ពុជា)',\n        CountryISO.Cambodia,\n        '855'\n    ],\n    [\n        'Cameroon (Cameroun)',\n        CountryISO.Cameroon,\n        '237'\n    ],\n    [\n        'Canada',\n        CountryISO.Canada,\n        '1',\n        1,\n        [\n            '204', '226', '236', '249', '250', '289', '306', '343', '365', '387', '403', '416',\n            '418', '431', '437', '438', '450', '506', '514', '519', '548', '579', '581', '587',\n            '604', '613', '639', '647', '672', '705', '709', '742', '778', '780', '782', '807',\n            '819', '825', '867', '873', '902', '905'\n        ]\n    ],\n    [\n        'Cape Verde (Kabu Verdi)',\n        CountryISO.CapeVerde,\n        '238'\n    ],\n    [\n        'Caribbean Netherlands',\n        CountryISO.CaribbeanNetherlands,\n        '599',\n        1\n    ],\n    [\n        'Cayman Islands',\n        'ky',\n        '1',\n        1,\n        [\n            '345',\n        ]\n    ],\n    [\n        'Central African Republic (République centrafricaine)',\n        CountryISO.CentralAfricanRepublic,\n        '236'\n    ],\n    [\n        'Chad (Tchad)',\n        CountryISO.Chad,\n        '235'\n    ],\n    [\n        'Chile',\n        CountryISO.Chile,\n        '56'\n    ],\n    [\n        'China (中国)',\n        CountryISO.China,\n        '86'\n    ],\n    [\n        'Christmas Island',\n        CountryISO.ChristmasIsland,\n        '61',\n        2\n    ],\n    [\n        'Cocos (Keeling) Islands',\n        CountryISO.Cocos,\n        '61',\n        1\n    ],\n    [\n        'Colombia',\n        CountryISO.Colombia,\n        '57'\n    ],\n    [\n        'Comoros (‫جزر القمر‬‎)',\n        CountryISO.Comoros,\n        '269'\n    ],\n    [\n        'Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)',\n        CountryISO.CongoDRCJamhuriYaKidemokrasiaYaKongo,\n        '243'\n    ],\n    [\n        'Congo (Republic) (Congo-Brazzaville)',\n        CountryISO.CongoRepublicCongoBrazzaville,\n        '242'\n    ],\n    [\n        'Cook Islands',\n        CountryISO.CookIslands,\n        '682'\n    ],\n    [\n        'Costa Rica',\n        CountryISO.CostaRica,\n        '506'\n    ],\n    [\n        'Côte d’Ivoire',\n        CountryISO.CôteDIvoire,\n        '225'\n    ],\n    [\n        'Croatia (Hrvatska)',\n        CountryISO.Croatia,\n        '385'\n    ],\n    [\n        'Cuba',\n        CountryISO.Cuba,\n        '53'\n    ],\n    [\n        'Curaçao',\n        CountryISO.Curaçao,\n        '599',\n        0\n    ],\n    [\n        'Cyprus (Κύπρος)',\n        CountryISO.Cyprus,\n        '357'\n    ],\n    [\n        'Czech Republic (Česká republika)',\n        CountryISO.CzechRepublic,\n        '420'\n    ],\n    [\n        'Denmark (Danmark)',\n        CountryISO.Denmark,\n        '45'\n    ],\n    [\n        'Djibouti',\n        CountryISO.Djibouti,\n        '253'\n    ],\n    [\n        'Dominica',\n        CountryISO.Dominica,\n        '1767'\n    ],\n    [\n        'Dominican Republic (República Dominicana)',\n        CountryISO.DominicanRepublic,\n        '1',\n        2,\n        [ '809', '829', '849' ]\n    ],\n    [\n        'Ecuador',\n        CountryISO.Ecuador,\n        '593'\n    ],\n    [\n        'Egypt (‫مصر‬‎)',\n        CountryISO.Egypt,\n        '20'\n    ],\n    [\n        'El Salvador',\n        CountryISO.ElSalvador,\n        '503'\n    ],\n    [\n        'Equatorial Guinea (Guinea Ecuatorial)',\n        CountryISO.EquatorialGuinea,\n        '240'\n    ],\n    [\n        'Eritrea',\n        CountryISO.Eritrea,\n        '291'\n    ],\n    [\n        'Estonia (Eesti)',\n        CountryISO.Estonia,\n        '372'\n    ],\n    [\n        'Ethiopia',\n        CountryISO.Ethiopia,\n        '251'\n    ],\n    [\n        'Falkland Islands (Islas Malvinas)',\n        CountryISO.FalklandIslands,\n        '500'\n    ],\n    [\n        'Faroe Islands (Føroyar)',\n        CountryISO.FaroeIslands,\n        '298'\n    ],\n    [\n        'Fiji',\n        CountryISO.Fiji,\n        '679'\n    ],\n    [\n        'Finland (Suomi)',\n        CountryISO.Finland,\n        '358',\n        0\n    ],\n    [\n        'France',\n        CountryISO.France,\n        '33'\n    ],\n    [\n        'French Guiana (Guyane française)',\n        CountryISO.FrenchGuiana,\n        '594'\n    ],\n    [\n        'French Polynesia (Polynésie française)',\n        CountryISO.FrenchPolynesia,\n        '689'\n    ],\n    [\n        'Gabon',\n        CountryISO.Gabon,\n        '241'\n    ],\n    [\n        'Gambia',\n        CountryISO.Gambia,\n        '220'\n    ],\n    [\n        'Georgia (საქართველო)',\n        CountryISO.Georgia,\n        '995'\n    ],\n    [\n        'Germany (Deutschland)',\n        CountryISO.Germany,\n        '49'\n    ],\n    [\n        'Ghana (Gaana)',\n        CountryISO.Ghana,\n        '233'\n    ],\n    [\n        'Gibraltar',\n        CountryISO.Gibraltar,\n        '350'\n    ],\n    [\n        'Greece (Ελλάδα)',\n        CountryISO.Greece,\n        '30'\n    ],\n    [\n        'Greenland (Kalaallit Nunaat)',\n        CountryISO.Greenland,\n        '299'\n    ],\n    [\n        'Grenada',\n        CountryISO.Grenada,\n        '1473'\n    ],\n    [\n        'Guadeloupe',\n        CountryISO.Guadeloupe,\n        '590',\n        0\n    ],\n    [\n        'Guam',\n        'gu',\n        '1',\n        1,\n        [\n            '671',\n        ]\n    ],\n    [\n        'Guatemala',\n        CountryISO.Guatemala,\n        '502'\n    ],\n    [\n        'Guernsey',\n        CountryISO.Guernsey,\n        '44',\n        1,\n        [ 1481 ]\n    ],\n    [\n        'Guinea (Guinée)',\n        CountryISO.Guinea,\n        '224'\n    ],\n    [\n        'Guinea-Bissau (Guiné Bissau)',\n        CountryISO.GuineaBissau,\n        '245'\n    ],\n    [\n        'Guyana',\n        CountryISO.Guyana,\n        '592'\n    ],\n    [\n        'Haiti',\n        CountryISO.Haiti,\n        '509'\n    ],\n    [\n        'Honduras',\n        CountryISO.Honduras,\n        '504'\n    ],\n    [\n        'Hong Kong (香港)',\n        CountryISO.HongKong,\n        '852'\n    ],\n    [\n        'Hungary (Magyarország)',\n        CountryISO.Hungary,\n        '36'\n    ],\n    [\n        'Iceland (Ísland)',\n        CountryISO.Iceland,\n        '354'\n    ],\n    [\n        'India (भारत)',\n        CountryISO.India,\n        '91'\n    ],\n    [\n        'Indonesia',\n        CountryISO.Indonesia,\n        '62'\n    ],\n    [\n        'Iran (‫ایران‬‎)',\n        CountryISO.Iran,\n        '98'\n    ],\n    [\n        'Iraq (‫العراق‬‎)',\n        CountryISO.Iraq,\n        '964'\n    ],\n    [\n        'Ireland',\n        CountryISO.Ireland,\n        '353'\n    ],\n    [\n        'Isle of Man',\n        CountryISO.IsleOfMan,\n        '44',\n        2,\n        [ 1624 ]\n    ],\n    [\n        'Israel (‫ישראל‬‎)',\n        CountryISO.Israel,\n        '972'\n    ],\n    [\n        'Italy (Italia)',\n        CountryISO.Italy,\n        '39',\n        0\n    ],\n    [\n        'Jamaica',\n        'jm',\n        '1',\n        1,\n        [\n            '876',\n        ]\n    ],\n    [\n        'Japan (日本)',\n        CountryISO.Japan,\n        '81'\n    ],\n    [\n        'Jersey',\n        CountryISO.Jersey,\n        '44',\n        3,\n        [ 1534 ]\n    ],\n    [\n        'Jordan (‫الأردن‬‎)',\n        CountryISO.Jordan,\n        '962'\n    ],\n    [\n        'Kazakhstan (Казахстан)',\n        CountryISO.Kazakhstan,\n        '7',\n        1\n    ],\n    [\n        'Kenya',\n        CountryISO.Kenya,\n        '254'\n    ],\n    [\n        'Kiribati',\n        CountryISO.Kiribati,\n        '686'\n    ],\n    [\n        'Kosovo',\n        CountryISO.Kosovo,\n        '383'\n    ],\n    [\n        'Kuwait (‫الكويت‬‎)',\n        CountryISO.Kuwait,\n        '965'\n    ],\n    [\n        'Kyrgyzstan (Кыргызстан)',\n        CountryISO.Kyrgyzstan,\n        '996'\n    ],\n    [\n        'Laos (ລາວ)',\n        CountryISO.Laos,\n        '856'\n    ],\n    [\n        'Latvia (Latvija)',\n        CountryISO.Latvia,\n        '371'\n    ],\n    [\n        'Lebanon (‫لبنان‬‎)',\n        CountryISO.Lebanon,\n        '961'\n    ],\n    [\n        'Lesotho',\n        CountryISO.Lesotho,\n        '266'\n    ],\n    [\n        'Liberia',\n        CountryISO.Liberia,\n        '231'\n    ],\n    [\n        'Libya (‫ليبيا‬‎)',\n        CountryISO.Libya,\n        '218'\n    ],\n    [\n        'Liechtenstein',\n        CountryISO.Liechtenstein,\n        '423'\n    ],\n    [\n        'Lithuania (Lietuva)',\n        CountryISO.Lithuania,\n        '370'\n    ],\n    [\n        'Luxembourg',\n        CountryISO.Luxembourg,\n        '352'\n    ],\n    [\n        'Macau (澳門)',\n        CountryISO.Macau,\n        '853'\n    ],\n    [\n        'Macedonia (FYROM) (Македонија)',\n        CountryISO.Macedonia,\n        '389'\n    ],\n    [\n        'Madagascar (Madagasikara)',\n        CountryISO.Madagascar,\n        '261'\n    ],\n    [\n        'Malawi',\n        CountryISO.Malawi,\n        '265'\n    ],\n    [\n        'Malaysia',\n        CountryISO.Malaysia,\n        '60'\n    ],\n    [\n        'Maldives',\n        CountryISO.Maldives,\n        '960'\n    ],\n    [\n        'Mali',\n        CountryISO.Mali,\n        '223'\n    ],\n    [\n        'Malta',\n        CountryISO.Malta,\n        '356'\n    ],\n    [\n        'Marshall Islands',\n        CountryISO.MarshallIslands,\n        '692'\n    ],\n    [\n        'Martinique',\n        CountryISO.Martinique,\n        '596'\n    ],\n    [\n        'Mauritania (‫موريتانيا‬‎)',\n        CountryISO.Mauritania,\n        '222'\n    ],\n    [\n        'Mauritius (Moris)',\n        CountryISO.Mauritius,\n        '230'\n    ],\n    [\n        'Mayotte',\n        CountryISO.Mayotte,\n        '262',\n        1\n    ],\n    [\n        'Mexico (México)',\n        CountryISO.Mexico,\n        '52'\n    ],\n    [\n        'Micronesia',\n        CountryISO.Micronesia,\n        '691'\n    ],\n    [\n        'Moldova (Republica Moldova)',\n        CountryISO.Moldova,\n        '373'\n    ],\n    [\n        'Monaco',\n        CountryISO.Monaco,\n        '377'\n    ],\n    [\n        'Mongolia (Монгол)',\n        CountryISO.Mongolia,\n        '976'\n    ],\n    [\n        'Montenegro (Crna Gora)',\n        CountryISO.Montenegro,\n        '382'\n    ],\n    [\n        'Montserrat',\n        'ms',\n        '1',\n        1,\n        [\n            '664',\n        ]\n    ],\n    [\n        'Morocco (‫المغرب‬‎)',\n        CountryISO.Morocco,\n        '212',\n        0\n    ],\n    [\n        'Mozambique (Moçambique)',\n        CountryISO.Mozambique,\n        '258'\n    ],\n    [\n        'Myanmar (Burma) (မြန်မာ)',\n        CountryISO.Myanmar,\n        '95'\n    ],\n    [\n        'Namibia (Namibië)',\n        CountryISO.Namibia,\n        '264'\n    ],\n    [\n        'Nauru',\n        CountryISO.Nauru,\n        '674'\n    ],\n    [\n        'Nepal (नेपाल)',\n        CountryISO.Nepal,\n        '977'\n    ],\n    [\n        'Netherlands (Nederland)',\n        CountryISO.Netherlands,\n        '31'\n    ],\n    [\n        'New Caledonia (Nouvelle-Calédonie)',\n        CountryISO.NewCaledonia,\n        '687'\n    ],\n    [\n        'New Zealand',\n        CountryISO.NewZealand,\n        '64'\n    ],\n    [\n        'Nicaragua',\n        CountryISO.Nicaragua,\n        '505'\n    ],\n    [\n        'Niger (Nijar)',\n        CountryISO.Niger,\n        '227'\n    ],\n    [\n        'Nigeria',\n        CountryISO.Nigeria,\n        '234'\n    ],\n    [\n        'Niue',\n        CountryISO.Niue,\n        '683'\n    ],\n    [\n        'Norfolk Island',\n        CountryISO.NorfolkIsland,\n        '672'\n    ],\n    [\n        'North Korea (조선 민주주의 인민 공화국)',\n        CountryISO.NorthKorea,\n        '850'\n    ],\n    [\n        'Northern Mariana Islands',\n        CountryISO.NorthernMarianaIslands,\n        '1670'\n    ],\n    [\n        'Norway (Norge)',\n        CountryISO.Norway,\n        '47',\n        0\n    ],\n    [\n        'Oman (‫عُمان‬‎)',\n        CountryISO.Oman,\n        '968'\n    ],\n    [\n        'Pakistan (‫پاکستان‬‎)',\n        CountryISO.Pakistan,\n        '92'\n    ],\n    [\n        'Palau',\n        CountryISO.Palau,\n        '680'\n    ],\n    [\n        'Palestine (‫فلسطين‬‎)',\n        CountryISO.Palestine,\n        '970'\n    ],\n    [\n        'Panama (Panamá)',\n        CountryISO.Panama,\n        '507'\n    ],\n    [\n        'Papua New Guinea',\n        CountryISO.PapuaNewGuinea,\n        '675'\n    ],\n    [\n        'Paraguay',\n        CountryISO.Paraguay,\n        '595'\n    ],\n    [\n        'Peru (Perú)',\n        CountryISO.Peru,\n        '51'\n    ],\n    [\n        'Philippines',\n        CountryISO.Philippines,\n        '63'\n    ],\n    [\n        'Poland (Polska)',\n        CountryISO.Poland,\n        '48'\n    ],\n    [\n        'Portugal',\n        CountryISO.Portugal,\n        '351'\n    ],\n    [\n        'Puerto Rico',\n        CountryISO.PuertoRico,\n        '1',\n        3,\n        [ '787', '939' ]\n    ],\n    [\n        'Qatar (‫قطر‬‎)',\n        CountryISO.Qatar,\n        '974'\n    ],\n    [\n        'Réunion (La Réunion)',\n        CountryISO.Réunion,\n        '262',\n        0\n    ],\n    [\n        'Romania (România)',\n        CountryISO.Romania,\n        '40'\n    ],\n    [\n        'Russia (Россия)',\n        CountryISO.Russia,\n        '7',\n        0\n    ],\n    [\n        'Rwanda',\n        CountryISO.Rwanda,\n        '250'\n    ],\n    [\n        'Saint Barthélemy (Saint-Barthélemy)',\n        CountryISO.SaintBarthélemy,\n        '590',\n        1\n    ],\n    [\n        'Saint Helena',\n        CountryISO.SaintHelena,\n        '290'\n    ],\n    [\n        'Saint Kitts and Nevis',\n        CountryISO.SaintKittsAndNevis,\n        '1869'\n    ],\n    [\n        'Saint Lucia',\n        'lc',\n        '1',\n        1,\n        [\n            '758',\n        ]\n    ],\n    [\n        'Saint Martin (Saint-Martin (partie française))',\n        CountryISO.SaintMartin,\n        '590',\n        2\n    ],\n    [\n        'Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)',\n        CountryISO.SaintPierreAndMiquelon,\n        '508'\n    ],\n    [\n        'Saint Vincent and the Grenadines',\n        'vc',\n        '1',\n        1,\n        [\n            '784',\n        ]\n    ],\n    [\n        'Samoa',\n        CountryISO.Samoa,\n        '685'\n    ],\n    [\n        'San Marino',\n        CountryISO.SanMarino,\n        '378'\n    ],\n    [\n        'São Tomé and Príncipe (São Tomé e Príncipe)',\n        CountryISO.SãoToméAndPríncipe,\n        '239'\n    ],\n    [\n        'Saudi Arabia (‫المملكة العربية السعودية‬‎)',\n        CountryISO.SaudiArabia,\n        '966'\n    ],\n    [\n        'Senegal (Sénégal)',\n        CountryISO.Senegal,\n        '221'\n    ],\n    [\n        'Serbia (Србија)',\n        CountryISO.Serbia,\n        '381'\n    ],\n    [\n        'Seychelles',\n        CountryISO.Seychelles,\n        '248'\n    ],\n    [\n        'Sierra Leone',\n        CountryISO.SierraLeone,\n        '232'\n    ],\n    [\n        'Singapore',\n        CountryISO.Singapore,\n        '65'\n    ],\n    [\n        'Sint Maarten',\n        'sx',\n        '1',\n        1,\n        [\n            '721',\n        ]\n    ],\n    [\n        'Slovakia (Slovensko)',\n        CountryISO.Slovakia,\n        '421'\n    ],\n    [\n        'Slovenia (Slovenija)',\n        CountryISO.Slovenia,\n        '386'\n    ],\n    [\n        'Solomon Islands',\n        CountryISO.SolomonIslands,\n        '677'\n    ],\n    [\n        'Somalia (Soomaaliya)',\n        CountryISO.Somalia,\n        '252'\n    ],\n    [\n        'South Africa',\n        CountryISO.SouthAfrica,\n        '27'\n    ],\n    [\n        'South Korea (대한민국)',\n        CountryISO.SouthKorea,\n        '82'\n    ],\n    [\n        'South Sudan (‫جنوب السودان‬‎)',\n        CountryISO.SouthSudan,\n        '211'\n    ],\n    [\n        'Spain (España)',\n        CountryISO.Spain,\n        '34'\n    ],\n    [\n        'Sri Lanka (ශ්‍රී ලංකාව)',\n        CountryISO.SriLanka,\n        '94'\n    ],\n    [\n        'Sudan (‫السودان‬‎)',\n        CountryISO.Sudan,\n        '249'\n    ],\n    [\n        'Suriname',\n        CountryISO.Suriname,\n        '597'\n    ],\n    [\n        'Svalbard and Jan Mayen',\n        CountryISO.SvalbardAndJanMayen,\n        '47',\n        1\n    ],\n    [\n        'Swaziland',\n        CountryISO.Swaziland,\n        '268'\n    ],\n    [\n        'Sweden (Sverige)',\n        CountryISO.Sweden,\n        '46'\n    ],\n    [\n        'Switzerland (Schweiz)',\n        CountryISO.Switzerland,\n        '41'\n    ],\n    [\n        'Syria (‫سوريا‬‎)',\n        CountryISO.Syria,\n        '963'\n    ],\n    [\n        'Taiwan (台灣)',\n        CountryISO.Taiwan,\n        '886'\n    ],\n    [\n        'Tajikistan',\n        CountryISO.Tajikistan,\n        '992'\n    ],\n    [\n        'Tanzania',\n        CountryISO.Tanzania,\n        '255'\n    ],\n    [\n        'Thailand (ไทย)',\n        CountryISO.Thailand,\n        '66'\n    ],\n    [\n        'Timor-Leste',\n        CountryISO.TimorLeste,\n        '670'\n    ],\n    [\n        'Togo',\n        CountryISO.Togo,\n        '228'\n    ],\n    [\n        'Tokelau',\n        CountryISO.Tokelau,\n        '690'\n    ],\n    [\n        'Tonga',\n        CountryISO.Tonga,\n        '676'\n    ],\n    [\n        'Trinidad and Tobago',\n        'tt',\n        '1',\n        1,\n        [\n            '868',\n        ]\n    ],\n    [\n        'Tunisia (‫تونس‬‎)',\n        CountryISO.Tunisia,\n        '216'\n    ],\n    [\n        'Turkey (Türkiye)',\n        CountryISO.Turkey,\n        '90'\n    ],\n    [\n        'Turkmenistan',\n        CountryISO.Turkmenistan,\n        '993'\n    ],\n    [\n        'Turks and Caicos Islands',\n        CountryISO.TurksAndCaicosIslands,\n        '1649'\n    ],\n    [\n        'Tuvalu',\n        CountryISO.Tuvalu,\n        '688'\n    ],\n    [\n        'U.S. Virgin Islands',\n        'vi',\n        '1',\n        1,\n        [\n            '340',\n        ]\n    ],\n    [\n        'Uganda',\n        CountryISO.Uganda,\n        '256'\n    ],\n    [\n        'Ukraine (Україна)',\n        CountryISO.Ukraine,\n        '380'\n    ],\n    [\n        'United Arab Emirates (‫الإمارات العربية المتحدة‬‎)',\n        CountryISO.UnitedArabEmirates,\n        '971'\n    ],\n    [\n        'United Kingdom',\n        CountryISO.UnitedKingdom,\n        '44',\n        0\n    ],\n    [\n        'United States',\n        CountryISO.UnitedStates,\n        '1',\n        0\n    ],\n    [\n        'Uruguay',\n        CountryISO.Uruguay,\n        '598'\n    ],\n    [\n        'Uzbekistan (Oʻzbekiston)',\n        CountryISO.Uzbekistan,\n        '998'\n    ],\n    [\n        'Vanuatu',\n        CountryISO.Vanuatu,\n        '678'\n    ],\n    [\n        'Vatican City (Città del Vaticano)',\n        CountryISO.VaticanCity,\n        '39',\n        1\n    ],\n    [\n        'Venezuela',\n        CountryISO.Venezuela,\n        '58'\n    ],\n    [\n        'Vietnam (Việt Nam)',\n        CountryISO.Vietnam,\n        '84'\n    ],\n    [\n        'Wallis and Futuna',\n        CountryISO.WallisAndFutuna,\n        '681'\n    ],\n    [\n        'Western Sahara (‫الصحراء الغربية‬‎)',\n        CountryISO.WesternSahara,\n        '212',\n        1\n    ],\n    [\n        'Yemen (‫اليمن‬‎)',\n        CountryISO.Yemen,\n        '967'\n    ],\n    [\n        'Zambia',\n        CountryISO.Zambia,\n        '260'\n    ],\n    [\n        'Zimbabwe',\n        CountryISO.Zimbabwe,\n        '263'\n    ],\n    [\n        'Åland Islands',\n        CountryISO.ÅlandIslands,\n        '358',\n        1\n    ]\n];\n","import * as lpn from \"google-libphonenumber\";\nimport { PhoneNumber, PhoneNumberFormat, PhoneNumberUtil } from \"google-libphonenumber\";\nimport { ChangeData } from \"../model/change-data\";\nimport { ALL_COUNTRIES } from \"../data/country-code\";\n\nexport class LocalPhoneUtils {\n    /**\n     * Returns parse PhoneNumber object.\n     * @param phoneNumber string\n     * @param regionCode string\n     */\n    public static getParsedNumber(phoneNumber: string = '', regionCode: string = ''): PhoneNumber {\n        if( !phoneNumber || !regionCode ) return new PhoneNumber();\n        try {\n            return lpn.PhoneNumberUtil.getInstance().parse(phoneNumber, regionCode.toUpperCase());\n        } catch (e) {\n            return new PhoneNumber()\n        }\n    }\n\n    /**\n     * Return a ChangeData object initialized with a phone number\n     * @param phoneNumber\n     */\n    public static getChangeData(phoneNumber?: string): ChangeData {\n        return new ChangeData(!phoneNumber ? new PhoneNumber() : lpn.PhoneNumberUtil.getInstance().parse(phoneNumber));\n    }\n\n\n    /**\n     * Gets formatted example phone number from phoneUtil.\n     * @param numberFormat\n     * @param countryCode\n     */\n    public static getPhoneNumberPlaceHolder(numberFormat: PhoneNumberFormat, countryCode: string): string {\n        const phoneUtil: PhoneNumberUtil = lpn.PhoneNumberUtil.getInstance();\n        return phoneUtil.format(phoneUtil.getExampleNumber(countryCode), numberFormat);\n    }\n\n    /**\n     * Sifts through all countries and returns iso code of the primary country\n     * based on the number provided.\n     * @param number PhoneNumber\n     * @param countryCode country code in number format\n     */\n    public static getCountryIsoCode(number: PhoneNumber, countryCode?: number): string | undefined {\n        if( !countryCode ) return;\n        // Will use this to match area code from the first numbers\n        // @ts-ignore\n        const rawNumber = number['values_']['2'].toString();\n        // List of all countries with countryCode (can be more than one. e.x. US, CA, DO, PR all have +1 countryCode)\n        const countriesFiltered = ALL_COUNTRIES.filter((c) => c[2].toString() === countryCode.toString());\n        // Main country is the country, which has no areaCodes specified in country-code.ts file.\n        const mainCountry = countriesFiltered.find((c) => c[4] === undefined);\n        // Secondary countries are all countries, which have areaCodes specified in country-code.ts file.\n        const secondaryCountries = countriesFiltered.filter((c) => c[4] !== undefined);\n        let matchedCountry = mainCountry ? mainCountry[1].toString() : undefined;\n\n        /*\n          Iterate over each secondary country and check if nationalNumber starts with any of areaCodes available.\n          If no matches found, fallback to the main country.\n        */\n        secondaryCountries.forEach((country) => {\n            // @ts-ignore\n            country[4].forEach((areaCode) => {\n                if( rawNumber.startsWith(areaCode) ) matchedCountry = country[1].toString();\n            });\n        });\n\n        return matchedCountry;\n    }\n}\n","import * as lpn from 'google-libphonenumber';\nimport { PhoneNumber, PhoneNumberUtil } from 'google-libphonenumber';\nimport { ChangeData } from '../model/change-data';\nimport { AbstractControl } from '@angular/forms';\nimport { LocalPhoneUtils } from \"../utils/local-phone-utils\";\n\n/**\n * Check if the phone number provide is in a valid format compare to the country selected\n * If not, an error is pushed to the FormControl: { invalidFormat: true }\n * It can be catched in the parent form to display a user error\n * @param control\n */\nexport const phoneNumberValidator = (control: AbstractControl) => {\n    if( !control.value ) return;\n    // @ts-ignore\n    // Native element property is added with NativeElementInjectorDirective\n    const el: HTMLElement = control['nativeElement'] as HTMLElement;\n    const inputBox: HTMLInputElement | any = el?.querySelector('input[type=\"tel\"]') || undefined;\n    if( inputBox ){\n        const isCheckValidation = !!inputBox.getAttribute('validation');\n        if( !isCheckValidation ) control.clearValidators();\n\n        const phoneUtil: PhoneNumberUtil = lpn.PhoneNumberUtil.getInstance();\n        const phoneNumber: PhoneNumber = phoneUtil.parse(control.value);\n        const phoneFormatted = new ChangeData(!control.value ? new PhoneNumber() : phoneNumber);\n        const number = phoneUtil.parse(phoneFormatted.number, LocalPhoneUtils.getCountryIsoCode(phoneNumber, phoneNumber?.getCountryCode()));\n        if( !phoneUtil.isValidNumberForRegion(number, phoneFormatted.countryCode) ) return { invalidFormat: true };\n    }\n    return;\n};\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'dialCode',\n    standalone: true\n})\nexport class DialCodePipe implements PipeTransform {\n  transform(dialoCode: string): string {\n    if (!dialoCode) return '';\n    return `+${ dialoCode }`;\n  }\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n    selector: '[favorite]',\n    standalone: true\n})\nexport class FavoriteElementInjectorDirective implements OnInit {\n    private el;\n\n    constructor(el: ElementRef) {\n        this.el = el;\n    }\n\n    ngOnInit() {\n        if (this.el.nativeElement.classList.contains('favorite')) {\n            this.el.nativeElement.parentNode.parentNode.classList.add('favoriteItem')\n        }\n    }\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n/*\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\n'NativeElementInjectorDirective' injects nativeElement to each control,\nso we can access it from inside validator for example.\nMore about this approach and reasons for this:\nhttps://github.com/angular/angular/issues/18025\nhttps://stackoverflow.com/a/54075119/1617590\n*/\n@Directive({\n    selector: '[ngModel], [formControl], [formControlName]',\n    standalone: true\n})\nexport class NativeElementInjectorDirective implements OnInit {\n    constructor(private controlDir: NgControl, private host: ElementRef<HTMLFormElement>) {\n    }\n\n    ngOnInit() {\n        //@ts-ignore\n        if( this.controlDir.control ) this.controlDir.control['nativeElement'] = this.host.nativeElement\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'filter',\n    standalone: true\n})\nexport class FilterPipe implements PipeTransform {\n  transform<T>(items: T[] | null, field: string, value: any): T[] {\n    if (!items) return [];\n    // @ts-ignore\n    return items.filter((item: T) => item[field] === value);\n  }\n}\n","import * as lpn from 'google-libphonenumber';\nimport { PhoneNumber, PhoneNumberFormat, PhoneNumberUtil } from 'google-libphonenumber';\n\nimport {\n    Component,\n    EventEmitter,\n    forwardRef,\n    input,\n    Input,\n    InputSignal,\n    OnChanges,\n    Output,\n    signal,\n    SimpleChange,\n    SimpleChanges,\n    WritableSignal,\n} from '@angular/core';\nimport { FormControl, FormsModule, NG_VALIDATORS, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\n\nimport { CountryISO } from '../model/country-iso.enum';\nimport { SearchCountryField } from '../model/search-country-field';\nimport { Country } from '../model/country.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { LocalPhoneUtils } from \"../utils/local-phone-utils\";\nimport { ChangeData } from \"../model/change-data\";\nimport { ALL_COUNTRIES } from \"../data/country-code\";\nimport { phoneNumberValidator } from \"../validator/p-intl-input-tel.validator\";\nimport { DropdownModule } from 'primeng/dropdown';\nimport { DialCodePipe } from '../pipe/dialCode.pipe';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { FavoriteElementInjectorDirective } from '../directives/favorite-element-injector.directive';\nimport { NativeElementInjectorDirective } from '../directives/native-element-injector.directive';\nimport { FilterPipe } from '../pipe/filter.pipe';\n\n@Component({\n    selector: 'p-intl-tel-input',\n    templateUrl: 'p-intl-input-tel.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => IntlInputTelComponent),\n            multi: true,\n        },\n        {\n            provide: NG_VALIDATORS,\n            useValue: phoneNumberValidator,\n            multi: true,\n        },\n    ],\n    standalone: true,\n    imports: [ DropdownModule, InputTextModule, FormsModule, ReactiveFormsModule, DialCodePipe, FilterPipe,\n        FavoriteElementInjectorDirective, NativeElementInjectorDirective ]\n})\nexport class IntlInputTelComponent implements OnChanges {\n    // Custom css classes\n    @Input() cssClass = 'form-control';\n    @Input() favoriteCountries: string[] = [];\n    // User option to display only some countries\n    @Input() onlyCountries: string [] = [];\n    // If true, the country will be set automatically if the user fill the region code\n    @Input() enableAutoCountrySelect = true;\n    @Input() displayPlaceholder = true;\n    @Input() customPlaceholder: string;\n    @Input() numberFormat: PhoneNumberFormat = PhoneNumberFormat.INTERNATIONAL;\n    // Flag to display or not the input search for countries\n    @Input() displaySearchCountry = true;\n    // Search country property\n    @Input() searchCountryField: SearchCountryField[] = [ SearchCountryField.NAME ];\n    @Input() searchCountryPlaceholder = 'Search Country';\n    @Input() maxLength: number;\n    // User option to select by default the first item of the list, default true\n    @Input() selectFirstCountry = true;\n    // Allow or not the phone validation form\n    @Input() phoneValidation = true;\n    // Customize the input id\n    @Input() inputId = 'phone';\n    @Input() selectedCountryISO: CountryISO;\n    @Input() separateDialCode = false;\n    // Set the language for search and display name country\n    @Input() lang = 'fr';\n    appendTo: InputSignal<any | null> = input(null);\n\n    @Input() set disabled(value: boolean) {\n        this.setDisabledState(value)\n    }\n\n    @Output() readonly countryChange = new EventEmitter<Country>();\n\n    public readonly SearchCountryField = SearchCountryField;\n    public phoneUtil: PhoneNumberUtil = lpn.PhoneNumberUtil.getInstance();\n\n    public selectedCountry: WritableSignal<Country> = signal<Country>(new Country());\n    public countries: Country[] = [];\n    public phoneNumber$ = new BehaviorSubject<PhoneNumber>(new PhoneNumber);\n    public phoneNumberControl = new FormControl('');\n\n    public onTouched = () => {\n    };\n\n    public propagateChange = (_: string) => {\n    };\n\n    private get favorites(): Country[] {\n        return this.countries.filter(c => c.isFavorite);\n    }\n\n    constructor() {\n        this.phoneNumberControl.valueChanges.subscribe(value => {\n            this.onPhoneNumberChange(value);\n        })\n        this.phoneNumber$.subscribe((phoneNumber: PhoneNumber) => {\n            this.propagateChange(this.phoneUtil.format(phoneNumber, PhoneNumberFormat.INTERNATIONAL));\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.isSelectedCountryChanged(changes['selectedCountryISO']) && !changes['selectedCountryISO'].firstChange) this.updateSelectedCountry();\n        if( changes['favoriteCountries'] && !changes['favoriteCountries'].firstChange) this.onFavoriteCountriesChanged();\n    }\n\n    public init(): void {\n        this.fetchCountryData();\n        if( this.onlyCountries.length ) this.countries = this.countries.filter((c) => this.onlyCountries.includes(c.iso2))\n        this.updateSelectedCountry();\n    }\n\n    /* --------------------------------- Events management -------------------------------- */\n\n    public onPhoneNumberChange(value?: any): void {\n        const currentCountryCode = this.selectedCountry().iso2;\n        const number = LocalPhoneUtils.getParsedNumber(value, currentCountryCode);\n\n        // Auto select country based on the extension (and areaCode if needed) (e.g select Canada if number starts with +1 416)\n        if( this.enableAutoCountrySelect ){\n            const countryCode = LocalPhoneUtils.getCountryIsoCode(number, number?.getCountryCode()) || currentCountryCode;\n            if( countryCode && countryCode !== this.selectedCountry().iso2 ){\n                const newCountry = this.countries\n                    .sort((a, b) => a.priority - b.priority)\n                    .find((c) => c.iso2 === countryCode);\n                if( newCountry ) this.setSelectedCountry(newCountry);\n            }\n        }\n\n        this.phoneNumber$.next(number);\n    }\n\n    public onCountrySelect(country: Country, el?: { focus: () => void; }): void {\n        let number: PhoneNumber = new PhoneNumber();\n        if( country !== this.selectedCountry() ) this.setSelectedCountry(country);\n\n        const currentValue = this.phoneNumberControl.value;\n        if( currentValue ) number = LocalPhoneUtils.getParsedNumber(currentValue, this.selectedCountry().iso2)\n\n        this.phoneNumber$.next(number)\n\n        setTimeout(() => el?.focus(), 100)\n    }\n\n    private onFavoriteCountriesChanged(): void {\n        this.fetchCountryData();\n        this.onCountrySelect(this.selectedCountry());\n    }\n\n    public onInputKeyPress(event: KeyboardEvent): void {\n        const allowedChars = /[0-9\\+\\-\\(\\)\\ ]/;\n        const allowedCtrlChars = /[axcv]/; // Allows copy-pasting\n        const allowedOtherKeys = [\n            'ArrowLeft',\n            'ArrowUp',\n            'ArrowRight',\n            'ArrowDown',\n            'Home',\n            'End',\n            'Insert',\n            'Delete',\n            'Backspace',\n            'Tab'\n        ];\n\n        if( !allowedChars.test(event.key)\n            && !(event.ctrlKey && allowedCtrlChars.test(event.key))\n            && !allowedOtherKeys.includes(event.key) ) event.preventDefault();\n    }\n\n    /* --------------------------------- Overwrite NG_VALUE_ACCESSOR -------------------------------- */\n\n    registerOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        isDisabled ? this.phoneNumberControl.disable() : this.phoneNumberControl.enable();\n    }\n\n    writeValue(obj: string): void {\n        this.init();\n        const phoneNumber: ChangeData = LocalPhoneUtils.getChangeData(obj);\n        this.setSelectedCountry(this.countries.find(c => c.iso2.toUpperCase() === phoneNumber.countryCode));\n        this.phoneNumberControl.setValue(phoneNumber.number || '')\n    }\n\n    /* --------------------------------- Helpers -------------------------------- */\n\n    protected fetchCountryData(): void {\n        const regionsNames = new Intl.DisplayNames([ this.lang ], {\n            type: 'region',\n        });\n        this.countries = ALL_COUNTRIES.map(country => ({\n            name: regionsNames.of(country[1].toString()?.toUpperCase()) || '',\n            iso2: country[1].toString(),\n            dialCode: country[2].toString(),\n            priority: +country[3] || 0,\n            areaCodes: (country[4] as string[]) || undefined,\n            htmlId: `item-${country[1].toString()}`,\n            flagClass: `iti__flag iti__${country[1].toString().toLocaleLowerCase()}`,\n            placeHolder: this.getPlaceholder(country[1].toString().toUpperCase()),\n            isFavorite: this.favoriteCountries.includes(country[1].toString())\n        })).sort((a, b) => Number(b.isFavorite) - Number(a.isFavorite));\n\n        if( this.selectFirstCountry ){\n            const country = this.favoriteCountries.length ? this.favorites[0] : this.countries[0];\n            this.setSelectedCountry(country);\n        }\n    }\n\n    /**\n     * Updates selectedCountry.\n     */\n    private updateSelectedCountry() {\n        if( !this.selectedCountryISO ) return;\n        const countrySelected = this.countries.find((c) => c.iso2.toLowerCase() === this.selectedCountryISO.toLowerCase())\n        this.setSelectedCountry(countrySelected);\n    }\n\n    private setSelectedCountry(country?: Country): void {\n        if( !country ) return;\n        this.selectedCountry.set(country);\n        this.countryChange.emit(country);\n    }\n\n    private isSelectedCountryChanged(selectedISO: SimpleChange): boolean {\n        return this.countries && selectedISO && selectedISO.currentValue !== selectedISO.previousValue;\n    }\n\n    private getPlaceholder(countryCode: string): string {\n        if( !this.displayPlaceholder ) return '';\n        if( this.customPlaceholder ) return this.customPlaceholder;\n        const placeholder = LocalPhoneUtils.getPhoneNumberPlaceHolder(this.numberFormat, countryCode);\n        if( this.separateDialCode && this.numberFormat === PhoneNumberFormat.INTERNATIONAL ) return LocalPhoneUtils.getChangeData(placeholder).number || '';\n        return placeholder\n    }\n}\n","<div class=\"p-inputgroup\">\n    <p-dropdown class=\"p-inputgroup-addon\" [options]=\"countries\" [filter]=\"true\" [filterFields]=\"searchCountryField\" [resetFilterOnHide]=\"true\"\n                [disabled]=\"phoneNumberControl.disabled\" panelStyleClass=\"fixWidth\" [class.withoutDialCode]=\"!separateDialCode\"\n                [ngModel]=\"selectedCountry()\" (onChange)=\"onCountrySelect($event.value, input)\"\n                [appendTo]=\"appendTo()\">\n        <ng-template pTemplate=\"selectedItem\">\n            <div class=\"flex align-items-center gap-2\">\n                <div id=\"flag\" [class]=\"selectedCountry().flagClass\"></div>\n                @if (separateDialCode) {\n                    <span id=\"dialcode\" class=\"ms-2\">{{ selectedCountry().dialCode | dialCode }}</span>\n                }\n            </div>\n        </ng-template>\n\n        <ng-template let-country pTemplate=\"item\" class=\"test\">\n            <div class=\"flex align-items-center gap-2 w-full\" [class.favorite]=\"country.isFavorite\" favorite>\n                <div [class]=\"country.flagClass\"></div>\n                <span>{{ country.name }}</span>\n                <span>{{ country.dialCode | dialCode }}</span>\n            </div>\n        </ng-template>\n    </p-dropdown>\n\n    <input pInputText #input class=\"form-control\" type=\"tel\" [id]=\"inputId\" autocomplete=\"off\" (blur)=\"onTouched()\"\n           [placeholder]=\"this.selectedCountry().placeHolder\" [formControl]=\"phoneNumberControl\" (keydown)=\"onInputKeyPress($event)\"\n           [attr.maxLength]=\"maxLength\" [attr.validation]=\"phoneValidation\">\n</div>\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1"],"mappings":"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"}